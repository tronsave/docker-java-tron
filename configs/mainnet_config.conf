net {
  type = mainnet
  # type = testnet
}

storage {
  # Directory for storing persistent data
  db.version = 2,
  db.engine="LEVELDB",
  db.sync = false,
  db.directory = "database",
  index.directory = "index",
  transHistory.switch = "on",
  # You can custom these 14 databases' configs:

  # account, account-index, asset-issue, block, block-index,
  # block_KDB, peers, properties, recent-block, trans,
  # utxo, votes, witness, witness_schedule.

  # Otherwise, db configs will remain default and data will be stored in
  # the path of "output-directory" or which is set by "-d" ("--output-directory").
  # setting can impove leveldb performance .... start
  # node: if this will increase process fds,you may be check your ulimit if 'too many open files' error occurs
  # see https://github.com/tronprotocol/tips/blob/master/tip-343.md for detail
  # if you find block sync has lower performance,you can try  this  settings
  index.switch = "off"
  maxOpenFiles = 50000
  writeBufferSize = 67108864
  cacheSize = 536870912
  blockSize = 65536
  default = {
    maxOpenFiles = 50000
    writeBufferSize = 67108864
    cacheSize = 536870912
    blockSize = 65536
  }
  defaultM = {
    maxOpenFiles = 100000
  }
  defaultL = {
    maxOpenFiles = 200000
  }
  # setting can impove leveldb performance .... end
  # Attention: name is a required field that must be set !!!
  properties = [
    //    {
    //      name = "account",
    //      path = "storage_directory_test",
    //      createIfMissing = true,
    //      paranoidChecks = true,
    //      verifyChecksums = true,
    //      compressionType = 1,        // compressed with snappy
    //      blockSize = 4096,           // 4  KB =         4 * 1024 B
    //      writeBufferSize = 10485760, // 10 MB = 10 * 1024 * 1024 B
    //      cacheSize = 10485760,       // 10 MB = 10 * 1024 * 1024 B
    //      maxOpenFiles = 100
    //    },
    //    {
    //      name = "account-index",
    //      path = "storage_directory_test",
    //      createIfMissing = true,
    //      paranoidChecks = true,
    //      verifyChecksums = true,
    //      compressionType = 1,        // compressed with snappy
    //      blockSize = 4096,           // 4  KB =         4 * 1024 B
    //      writeBufferSize = 10485760, // 10 MB = 10 * 1024 * 1024 B
    //      cacheSize = 10485760,       // 10 MB = 10 * 1024 * 1024 B
    //      maxOpenFiles = 100
    //    },
  ]

  needToUpdateAsset = true

  //dbsettings is needed when using rocksdb as the storage implement (db.engine="ROCKSDB").
  //we'd strongly recommend that do not modify it unless you know every item's meaning clearly.
  dbSettings = {
    levelNumber = 7
    compactThreads = 8 // full when sync and cpu/2 when sync done 
    blocksize = 64  // n * KB
    maxBytesForLevelBase = 256  // n * MB
    maxBytesForLevelMultiplier = 10
    level0FileNumCompactionTrigger = 2 // 4 when sync 2 when sync done
    targetFileSizeBase = 256  // n * MB
    targetFileSizeMultiplier = 1
  }

  //backup settings when using rocks db as the storage implement (db.engine="ROCKSDB").
  //if you want to use the backup plugin, please confirm set the db.engine="ROCKSDB" above.
  backup = {
    enable = false  // indicate whether enable the backup plugin
    propPath = "prop.properties" // record which bak directory is valid
    bak1path = "bak1/database" // you must set two backup directories to prevent application halt unexpected(e.g. kill -9).
    bak2path = "bak2/database"
    frequency = 10000   // indicate backup db once every 10000 blocks processed.
  }

  balance.history.lookup = false

  checkpoint.version = 2
  checkpoint.sync = true

  # the estimated number of block transactions (default 1000, min 100, max 10000).
  # so the total number of cached transactions is 65536 * txCache.estimatedTransactions
  txCache.estimatedTransactions = 1000
  txCache.initOptimization = true

  # data root setting, for check data, currently, only reward-vi is used.

  # merkleRoot = {
  # reward-vi = 9debcb9924055500aaae98cdee10501c5c39d4daa75800a996f4bdda73dbccd8 // main-net, Sha256Hash, hexString
  # }
}

node.discovery = {
  enable = true
  persist = true
}

# custom stop condition
#node.shutdown = {
#  BlockTime  = "54 59 08 * * ?" # if block header time in persistent db matched.
#  BlockHeight = 33350800 # if block header height in persistent db matched.
#  BlockCount = 12 # block sync count after node start.
#}

node.backup {
  # udp listen port, each member should have the same configuration
  port = 10001

  # my priority, each member should use different priority
  priority = 8

  # time interval to send keepAlive message, each member should have the same configuration
  keepAliveInterval = 3000

  # peer's ip list, can't contain mine
  members = [
    # "ip",
    # "ip"
  ]
}

crypto {
  engine = "eckey"
}
# prometheus metrics start
# node.metrics = {
#  prometheus{
#    enable=true
#    port="9527"
#  }
# }

# prometheus metrics end

node {
  # trust node for solidity node
  # trustNode = "ip:port"
  trustNode = "127.0.0.1:50051"

  # expose extension api to public or not
  walletExtensionApi = true

  listen.port = 18888

  connection.timeout = 2

  fetchBlock.timeout = 200

  tcpNettyWorkThreadNum = 0

  udpNettyWorkThreadNum = 1

  # Number of validate sign thread, default availableProcessors / 2
  # validateSignThreadNum = 16

  maxConnections = 100

  minConnections = 10

  minActiveConnections = 5

  maxConnectionsWithSameIp = 5

  maxHttpConnectNumber = 50

  minParticipationRate = 15

  isOpenFullTcpDisconnect = false

  p2p {
    version = 11111 # 11111: mainnet; 20180622: testnet
    maxActiveNodes: 200
    maxActiveNodesWithSameIp: 5
  }

  active = [
    # Active establish connection in any case
    # Sample entries:
    # "ip:port",
    # "ip:port"
  ]

  passive = [
    # Passive accept connection in any case
    # Sample entries:
    # "ip:port",
    # "ip:port"
  ]

  fastForward = [
    "100.26.245.209:18888",
    "15.188.6.125:18888"
  ]

  http {
    fullNodeEnable = true
    fullNodePort = {FULL_NODE_PORT}
    solidityEnable = false
    solidityPort = {SOLIDITY_NODE_PORT}
  }

  rpc {
    port = 50051
    #solidityPort = 50061
    # Number of gRPC thread, default availableProcessors / 2
    thread = 16

    # The maximum number of concurrent calls permitted for each incoming connection
    # maxConcurrentCallsPerConnection =

    # The HTTP/2 flow control window, default 1MB
    # flowControlWindow =

    # Connection being idle for longer than which will be gracefully terminated
    maxConnectionIdleInMillis = 60000

    # Connection lasting longer than which will be gracefully terminated
    # maxConnectionAgeInMillis =

    # The maximum message size allowed to be received on the server, default 4MB
    # maxMessageSize =

    # The maximum size of header list allowed to be received, default 8192
    # maxHeaderListSize =

    # Transactions can only be broadcast if the number of effective connections is reached.
    minEffectiveConnection = 1
   
    # The switch of the reflection service, effective for all gRPC services
    # reflectionService = true
  }

  # number of solidity thread in the FullNode.
  # If accessing solidity rpc and http interface timeout, could increase the number of threads,
  # The default value is the number of cpu cores of the machine.
  #solidity.threads = 8

  # Limits the maximum percentage (default 75%) of producing block interval
  # to provide sufficient time to perform other operations e.g. broadcast block
  # blockProducedTimeOut = 75

  # Limits the maximum number (default 700) of transaction from network layer
  # netMaxTrxPerSecond = 700

  # Whether to enable the node detection function, default false
  # nodeDetectEnable = false

  # use your ipv6 address for node discovery and tcp connection, default false
  enableIpv6 = false

  # if your node's highest block num is below than all your pees', try to acquire new connection. default false
  effectiveCheckEnable = true

  # Dynamic loading configuration function, disabled by default
  # dynamicConfig = {
    # enable = false
    # Configuration file change check interval, default is 600 seconds
    # checkInterval = 600
  # }

  dns {
    # dns urls to get nodes, url format tree://{pubkey}@{domain}, default empty
    treeUrls = [
      #"tree://AKMQMNAJJBL73LXWPXDI4I5ZWWIZ4AWO34DWQ636QOBBXNFXH3LQS@main.trondisco.net", //offical dns tree
    ]

    # enable or disable dns publish, default false
    # publish = false

    # dns domain to publish nodes, required if publish is true
    # dnsDomain = "nodes1.example.org"

    # dns private key used to publish, required if publish is true, hex string of length 64
    # dnsPrivate = "b71c71a67e1177ad4e901695e1b4b9ee17ae16c6668d313eac2f96dbcda3f291"

    # known dns urls to publish if publish is true, url format tree://{pubkey}@{domain}, default empty
    # knownUrls = [
    #"tree://APFGGTFOBVE2ZNAB3CSMNNX6RRK3ODIRLP2AA5U4YFAA6MSYZUYTQ@nodes2.example.org",
    # ]

    # staticNodes = [
    # static nodes to published on dns
    # Sample entries:
    # "ip:port",
    # "ip:port"
    # ]

    # merge several nodes into a leaf of tree, should be 1~5
    # maxMergeSize = 5

    # only nodes change percent is bigger then the threshold, we update data on dns
    # changeThreshold = 0.1

    # dns server to publish, required if publish is true, only aws or aliyun is support
    # serverType = "aws"

    # access key id of aws or aliyun api, required if publish is true, string
    # accessKeyId = "your-key-id"

    # access key secret of aws or aliyun api, required if publish is true, string
    # accessKeySecret = "your-key-secret"

    # if publish is true and serverType is aliyun, it's endpoint of aws dns server, string
    # aliyunDnsEndpoint = "alidns.aliyuncs.com"

    # if publish is true and serverType is aws, it's region of aws api, such as "eu-south-1", string
    # awsRegion = "us-east-1"

    # if publish is true and server-type is aws, it's host zone id of aws's domain, string
    # awsHostZoneId = "your-host-zone-id"
  }

  # open the history query APIs(http&GRPC) when node is a lite fullNode,
  # like {getBlockByNum, getBlockByID, getTransactionByID...}.
  # default: false.
  # note: above APIs may return null even if blocks and transactions actually are on the blockchain
  # when opening on a lite fullnode. only open it if the consequences being clearly known
  # openHistoryQueryWhenLiteFN = false

  jsonrpc {
    # Note: If you turn on jsonrpc and run it for a while and then turn it off, you will not
    # be able to get the data from eth_getLogs for that period of time.

    httpFullNodeEnable = false
    httpFullNodePort = {RPC_FULL_NODE}
    httpSolidityEnable = false
    httpSolidityPort = {RPC_SOLIDITY_NODE}
    httpPBFTEnable = true
    httpPBFTPort = 8565
  }

  # Disabled api list, it will work for http, rpc and pbft, both fullnode and soliditynode,
  # but not jsonrpc.
  # Sample: The setting is case insensitive, GetNowBlock2 is equal to getnowblock2
  #
  # disabledApi = [
  #   "getaccount",
  #   "getnowblock2"
  # ]
}

## rate limiter config
rate.limiter = {
  # Every api could be set a specific rate limit strategy. Three strategy are supported:GlobalPreemptibleAdapter、IPQPSRateLimiterAdapte、QpsRateLimiterAdapter
  # GlobalPreemptibleAdapter: permit is the number of preemptible resource, every client must apply one resourse
  #       before do the request and release the resource after got the reponse automaticlly. permit should be a Integer.
  # QpsRateLimiterAdapter: qps is the average request count in one second supported by the server, it could be a Double or a Integer.
  # IPQPSRateLimiterAdapter: similar to the QpsRateLimiterAdapter, qps could be a Double or a Integer.
  # If do not set, the "default strategy" is set.The "default startegy" is based on QpsRateLimiterAdapter, the qps is set as 10000.
  #
  # Sample entries:
  #
  http = [
    #  {
    #    component = "GetNowBlockServlet",
    #    strategy = "GlobalPreemptibleAdapter",
    #    paramString = "permit=1"
    #  },

    #  {
    #    component = "GetAccountServlet",
    #    strategy = "IPQPSRateLimiterAdapter",
    #    paramString = "qps=1"
    #  },

    #  {
    #    component = "ListWitnessesServlet",
    #    strategy = "QpsRateLimiterAdapter",
    #    paramString = "qps=1"
    #  }
  ],

  rpc = [
    #  {
    #    component = "protocol.Wallet/GetBlockByLatestNum2",
    #    strategy = "GlobalPreemptibleAdapter",
    #    paramString = "permit=1"
    #  },

    #  {
    #    component = "protocol.Wallet/GetAccount",
    #    strategy = "IPQPSRateLimiterAdapter",
    #    paramString = "qps=1"
    #  },

    #  {
    #    component = "protocol.Wallet/ListWitnesses",
    #    strategy = "QpsRateLimiterAdapter",
    #    paramString = "qps=1"
    #  },
  ]

  # global qps, default 50000
  # global.qps = 50000
  # IP-based global qps, default 10000
  # global.ip.qps = 10000
}



seed.node = {
  # List of the seed nodes
  # Seed nodes are stable full nodes
  ip.list = ["1.234.54.78:18888","100.27.171.62:18888","100.28.166.4:18888","101.44.160.71:18888","101.44.187.187:18888","101.44.25.152:18888","102.161.201.67:18888","103.149.181.242:18888","103.163.186.155:18888","103.214.146.27:18888","103.214.147.35:18888","103.214.172.86:18888","103.214.23.46:18888","103.233.83.4:18888","103.236.100.131:18888","103.242.110.41:18888","103.6.168.7:18888","104.192.3.78:18888","104.192.42.140:18888","104.193.254.2:18888","104.194.10.118:18888","104.196.225.61:18888","104.198.108.89:18888","104.219.237.146:18888","104.233.192.15:18888","104.238.222.164:18888","104.243.32.238:18888","104.243.40.4:18888","104.248.105.121:18888","104.248.240.78:18888","104.248.99.122:18888","108.171.201.106:18888","111.221.44.70:18888","111.235.225.158:18888","116.202.171.24:18888","116.202.84.116:18888","116.202.9.192:18888","116.203.114.69:18888","118.178.187.196:18888","118.190.207.24:18888","118.67.204.155:18888","119.8.55.57:18888","125.227.227.64:18888","125.253.92.1:18888","128.140.4.221:18888","129.150.38.161:18888","129.150.45.59:18888","129.150.58.232:18888","129.150.62.171:18888","129.213.189.229:18888","129.213.52.173:18888","129.232.171.171:18888","13.113.169.153:18888","13.124.62.58:18888","13.124.95.139:18888","13.125.47.24:18888","13.210.102.95:18888","13.211.43.189:18888","13.211.48.80:18888","13.212.52.149:18888","13.213.225.227:18888","13.228.119.63:18888","13.228.221.81:18888","13.231.249.72:18888","13.250.107.111:18888","13.38.71.160:18888","13.39.242.238:18888","13.59.194.119:18888","132.145.152.100:18888","134.119.176.59:18888","134.122.196.46:18888","134.195.90.189:18888","134.195.90.229:18888","134.199.140.191:18888","134.199.141.141:18888","134.199.184.75:18888","134.65.192.154:18888","134.65.194.20:18888","134.65.195.124:18888","135.125.188.185:18888","135.125.189.109:18888","135.125.224.33:18888","135.181.113.223:18888","135.181.119.184:18888","135.181.169.166:18888","135.181.180.80:18888","135.181.218.59:18888","135.181.218.60:18888","135.181.220.124:18888","135.181.227.175:18888","135.181.228.163:18888","135.181.229.171:18888","135.181.56.146:18888","135.181.58.243:18888","136.175.8.179:18888","136.243.102.220:18888","136.243.144.79:18888","136.243.77.121:18888","137.184.247.160:18888","138.197.240.104:18888","138.197.240.96:18888","138.197.60.5:18888","138.199.192.102:18888","138.2.69.142:18888","138.201.103.165:18888","138.201.152.19:18888","139.59.200.142:18888","141.164.35.116:18888","141.255.167.58:18888","141.94.3.232:18888","141.95.65.142:18888","141.95.65.145:18888","141.95.83.192:18888","141.95.84.70:18888","141.98.217.168:18888","141.98.219.177:18888","141.98.219.197:18888","142.132.132.226:18888","142.132.133.40:18888","142.132.144.189:18888","142.132.148.155:18888","142.132.152.169:18888","142.132.158.212:18888","142.132.248.229:18888","144.172.89.110:18888","144.76.174.189:18888","144.76.192.92:18888","144.76.227.92:18888","144.76.26.48:18888","144.76.70.124:18888","144.76.78.207:18888","144.76.93.253:18888","145.239.3.65:18888","146.190.13.115:18888","146.190.192.120:18888","146.59.111.90:18888","147.135.136.186:18888","147.45.124.96:18888","148.113.189.204:18888","148.251.137.158:18888","148.251.155.7:18888","148.251.172.2:18888","148.251.4.115:18888","148.66.18.42:18888","149.202.10.52:18888","149.28.128.234:18888","149.28.149.236:18888","149.28.157.246:18888","149.28.85.8:18888","149.50.96.142:18888","15.165.18.4:18888","15.168.9.97:18888","15.204.108.46:18888","15.204.143.215:18888","15.207.144.3:18888","15.222.19.181:18888","15.222.203.171:18888","15.235.160.230:18888","15.235.181.91:18888","15.235.204.131:18888","15.235.225.139:18888","15.236.149.86:18888","15.236.218.209:18888","15.236.23.159:18888","15.237.139.107:18888","15.237.36.253:18888","150.136.110.233:18888","150.136.15.125:18888","150.136.32.214:18888","150.136.64.139:18888","150.136.70.24:18888","150.136.92.123:18888","151.115.59.248:18888","152.69.209.16:18888","154.207.99.5:18888","154.23.252.121:18888","156.251.27.23:18888","157.230.194.193:18888","157.230.199.4:18888","157.90.128.69:18888","157.90.95.170:18888","157.90.95.97:18888","157.90.98.102:18888","158.101.111.27:18888","158.160.21.22:18888","159.203.143.181:18888","159.203.54.176:18888","159.65.210.222:18888","159.69.65.226:18888","159.89.30.80:18888","16.162.189.249:18888","16.162.2.5:18888","16.162.23.210:18888","16.162.38.213:18888","16.162.60.213:18888","16.162.72.152:18888","16.163.109.5:18888","16.163.213.204:18888","16.163.22.172:18888","160.202.129.177:18888","162.19.112.144:18888","162.19.112.217:18888","162.19.170.28:18888","162.247.2.100:18888","162.254.36.152:18888","162.55.0.247:18888","162.55.102.234:18888","162.55.110.6:18888","162.55.246.211:18888","162.55.65.124:18888","162.55.7.41:18888","162.55.81.75:18888","162.55.88.232:18888","162.55.91.171:18888","163.172.33.173:18888","164.152.161.15:18888","164.152.163.20:18888","164.90.252.162:18888","165.227.144.70:18888","165.227.240.58:18888","166.1.160.107:18888","167.235.114.37:18888","167.235.155.135:18888","167.235.244.45:18888","167.235.88.216:18888","167.235.89.25:18888","167.99.22.193:18888","168.119.215.20:18888","168.119.30.61:18888","168.119.5.80:18888","168.119.7.246:18888","168.119.77.37:18888","168.138.186.73:18888","169.150.243.48:18888","169.155.168.172:18888","169.155.169.168:18888","169.155.169.75:18888","169.155.44.122:18888","169.155.44.46:18888","169.155.47.1:18888","170.205.38.164:18888","170.64.242.167:18888","170.64.242.248:18888","170.64.249.239:18888","171.213.137.138:18888","172.236.140.6:18888","172.245.218.130:18888","174.138.103.97:18888","175.110.115.135:18888","176.107.161.32:18888","176.57.211.35:18888","176.9.123.203:18888","176.9.143.151:18888","176.9.3.23:18888","176.9.4.146:18888","176.97.114.187:18888","178.124.148.56:18888","178.128.133.243:18888","178.156.153.52:18888","178.63.0.176:18888","178.63.138.109:18888","178.63.20.94:18888","178.63.23.54:18888","18.116.84.14:18888","18.117.218.178:18888","18.119.9.169:18888","18.130.98.104:18888","18.133.82.227:18888","18.135.9.36:18888","18.136.126.133:18888","18.136.46.182:18888","18.139.17.185:18888","18.139.193.235:18888","18.139.248.26:18888","18.140.246.59:18888","18.141.79.38:18888","18.142.82.44:18888","18.143.91.167:18888","18.143.97.57:18888","18.156.81.146:18888","18.162.222.224:18888","18.163.17.58:18888","18.163.230.203:18888","18.163.56.124:18888","18.163.94.42:18888","18.166.159.108:18888","18.166.188.173:18888","18.166.211.201:18888","18.166.99.110:18888","18.167.130.243:18888","18.167.171.167:18888","18.185.33.215:18888","18.189.25.108:18888","18.192.134.41:18888","18.196.99.16:18888","18.198.229.137:18888","18.198.237.165:18888","18.206.50.220:18888","18.208.41.126:18888","18.209.42.127:18888","18.210.241.149:18888","18.216.229.31:18888","18.218.114.43:18888","18.221.72.178:18888","18.222.99.140:18888","18.231.27.82:18888","182.150.57.52:18888","182.16.57.194:18888","185.100.235.184:18888","185.107.68.172:18888","185.107.80.86:18888","185.121.13.21:18888","185.132.134.247:18888","185.150.190.12:18888","185.16.43.67:18888","185.175.46.185:18888","185.176.41.191:18888","185.18.52.248:18888","185.209.179.189:18888","185.210.125.33:18888","185.212.149.28:18888","185.225.233.214:18888","185.230.88.29:18888","185.246.87.48:18888","185.44.206.111:18888","185.44.76.135:18888","185.59.45.62:18888","185.8.106.103:18888","185.8.107.40:18888","185.8.107.49:18888","185.80.234.124:18888","185.84.224.86:18888","186.190.211.210:18888","188.132.192.45:18888","188.138.38.85:18888","188.165.77.9:18888","188.187.190.7:18888","188.245.232.121:18888","188.245.233.168:18888","188.245.243.179:18888","188.246.224.202:18888","188.40.139.183:18888","188.40.61.181:18888","188.40.83.153:18888","192.64.112.138:18888","193.109.68.7:18888","193.24.210.56:18888","194.110.169.134:18888","194.110.169.135:18888","194.110.248.57:18888","194.124.244.160:18888","194.147.35.89:18888","194.233.65.75:18888","194.58.33.49:18888","194.87.11.31:18888","195.160.221.163:18888","195.160.221.196:18888","195.201.129.123:18888","195.201.203.151:18888","195.201.236.59:18888","195.201.98.3:18888","198.177.125.248:18888","198.244.177.175:18888","198.244.213.68:18888","198.40.48.28:18888","20.238.17.253:18888","20.4.47.198:18888","204.16.242.100:18888","204.16.244.205:18888","204.16.244.217:18888","204.16.244.229:18888","205.209.113.254:18888","206.204.104.4:18888","206.204.104.8:18888","206.204.106.9:18888","207.148.75.85:18888","209.38.115.60:18888","209.58.145.144:18888","211.47.50.77:18888","211.47.50.78:18888","212.192.220.7:18888","212.32.249.175:18888","212.41.11.209:18888","212.41.27.26:18888","212.41.8.215:18888","212.56.36.108:18888","212.8.250.157:18888","212.95.53.182:18888","213.136.70.171:18888","213.175.121.130:18888","213.232.245.99:18888","213.239.196.222:18888","213.239.215.157:18888","213.244.249.30:18888","213.250.129.106:18888","213.250.148.249:18888","216.118.255.226:18888","216.120.247.92:18888","216.219.91.198:18888","217.147.93.5:18888","217.28.62.27:18888","217.77.50.17:18888","220.132.124.188:18888","223.25.71.236:18888","223.93.144.63:18888","23.109.159.68:18888","23.109.95.28:18888","23.162.56.173:18888","23.224.119.154:18888","23.225.60.10:18888","23.227.221.237:18888","23.227.221.94:18888","23.227.222.231:18888","23.239.119.82:18888","23.239.119.90:18888","23.81.42.208:18888","23.88.20.108:18888","23.88.25.153:18888","23.88.68.118:18888","23.88.68.160:18888","23.88.78.154:18888","23.88.88.113:18888","27.124.34.35:18888","27.124.42.138:18888","27.148.206.140:18888","3.0.214.7:18888","3.0.3.147:18888","3.0.79.203:18888","3.1.133.60:18888","3.104.14.118:18888","3.112.19.215:18888","3.115.26.122:18888","3.120.233.253:18888","3.124.155.58:18888","3.125.212.130:18888","3.127.155.121:18888","3.127.90.12:18888","3.136.230.245:18888","3.137.0.94:18888","3.138.164.178:18888","3.138.190.200:18888","3.208.135.75:18888","3.216.116.227:18888","3.218.136.234:18888","3.220.108.242:18888","3.223.120.158:18888","3.225.171.164:18888","3.235.42.116:18888","3.238.193.79:18888","3.34.50.221:18888","3.36.48.172:18888","3.78.76.89:18888","3.8.71.47:18888","3.9.180.48:18888","3.97.148.111:18888","3.98.94.35:18888","31.172.68.224:18888","31.210.171.224:18888","31.210.171.91:18888","31.214.144.110:18888","34.107.3.177:18888","34.116.212.217:18888","34.118.95.84:18888","34.124.215.45:18888","34.126.107.76:18888","34.126.141.20:18888","34.127.52.115:18888","34.141.113.78:18888","34.141.18.31:18888","34.142.136.208:18888","34.143.247.77:18888","34.151.237.76:18888","34.151.92.106:18888","34.159.215.240:18888","34.168.180.192:18888","34.168.181.106:18888","34.168.61.97:18888","34.172.230.64:18888","34.195.52.104:18888","34.199.67.116:18888","34.200.240.61:18888","34.208.18.175:18888","34.209.155.39:18888","34.216.11.123:18888","34.216.20.65:18888","34.220.77.106:18888","34.221.52.114:18888","34.227.44.124:18888","34.233.151.129:18888","34.235.56.80:18888","34.237.210.82:18888","34.241.50.245:18888","34.243.17.174:18888","34.247.231.60:18888","34.253.187.192:18888","34.30.200.234:18888","34.30.250.219:18888","34.44.57.208:18888","34.45.180.247:18888","34.48.188.83:18888","34.48.6.163:18888","34.64.248.234:18888","34.81.177.33:18888","34.81.30.190:18888","34.82.152.248:18888","34.82.95.168:18888","34.86.86.229:18888","34.87.114.160:18888","34.87.117.63:18888","34.87.19.164:18888","34.92.234.78:18888","34.92.45.131:18888","34.92.89.233:18888","34.92.95.193:18888","34.95.193.127:18888","34.96.140.46:18888","34.96.176.123:18888","35.156.40.114:18888","35.157.51.34:18888","35.167.108.206:18888","35.167.210.93:18888","35.171.220.152:18888","35.173.146.20:18888","35.174.93.198:18888","35.176.219.245:18888","35.178.11.0:18888","35.178.220.81:18888","35.178.243.226:18888","35.180.21.245:18888","35.180.51.163:18888","35.180.98.131:18888","35.181.191.120:18888","35.189.67.47:18888","35.194.176.34:18888","35.197.17.205:18888","35.197.171.161:18888","35.198.122.16:18888","35.198.151.146:18888","35.198.43.135:18888","35.198.90.86:18888","35.199.81.85:18888","35.227.149.90:18888","35.229.169.175:18888","35.229.199.112:18888","35.230.74.253:18888","35.234.95.253:18888","35.236.173.134:18888","35.240.144.137:18888","35.240.149.114:18888","35.240.174.36:18888","35.240.220.87:18888","35.242.220.149:18888","35.244.93.200:18888","35.245.85.141:18888","35.247.128.170:18888","35.247.6.113:18888","35.74.142.210:18888","35.74.7.196:18888","35.76.48.223:18888","35.81.38.138:18888","37.120.147.4:18888","37.120.193.221:18888","37.120.236.13:18888","37.187.135.43:18888","37.252.14.189:18888","37.27.110.7:18888","37.27.113.3:18888","37.27.118.252:18888","37.27.206.170:18888","37.27.227.152:18888","37.27.237.143:18888","37.27.25.172:18888","37.27.66.239:18888","37.27.71.16:18888","37.27.91.224:18888","38.129.139.204:18888","38.207.159.177:18888","38.22.17.128:18888","38.242.129.70:18888","38.75.137.231:18888","38.89.70.215:18888","38.95.13.170:18888","38.97.40.125:18888","38.99.82.221:18888","39.174.83.85:18888","4.185.142.179:18888","40.160.26.5:18888","42.200.213.116:18888","43.133.37.249:18888","43.134.16.190:18888","43.198.142.160:18888","43.198.147.230:18888","43.198.47.50:18888","43.199.116.129:18888","43.199.97.105:18888","43.202.232.0:18888","43.202.40.213:18888","43.202.59.126:18888","43.207.106.139:18888","43.207.187.157:18888","44.197.106.221:18888","44.199.251.203:18888","44.203.105.78:18888","44.205.88.94:18888","44.208.138.167:18888","44.217.8.103:18888","44.225.65.20:18888","44.232.119.174:18888","44.236.125.107:18888","44.236.192.97:18888","44.240.45.251:18888","45.137.213.115:18888","45.139.225.82:18888","45.139.226.52:18888","45.143.197.74:18888","45.32.11.124:18888","45.45.216.17:18888","45.66.158.60:18888","45.91.94.167:18888","46.165.230.109:18888","46.166.138.201:18888","46.250.163.42:18888","46.28.206.123:18888","46.28.234.62:18888","46.4.5.173:18888","46.4.85.108:18888","47.104.173.32:18888","47.110.254.203:18888","47.129.178.27:18888","47.130.47.156:18888","47.130.90.239:18888","47.236.2.172:18888","47.237.18.241:18888","47.238.32.217:18888","47.242.197.213:18888","47.83.159.33:18888","49.12.172.177:18888","49.12.173.168:18888","49.12.173.248:18888","49.12.227.189:18888","49.12.63.79:18888","5.149.248.87:18888","5.161.106.93:18888","5.161.112.50:18888","5.161.199.143:18888","5.161.236.133:18888","5.161.243.239:18888","5.161.247.1:18888","5.161.252.179:18888","5.196.92.195:18888","5.199.170.39:18888","5.223.45.41:18888","5.223.47.175:18888","5.223.50.29:18888","5.223.51.241:18888","5.223.52.183:18888","5.252.172.14:18888","5.39.223.8:18888","5.78.113.134:18888","5.78.118.196:18888","5.78.129.89:18888","5.78.130.57:18888","5.78.66.219:18888","5.78.67.22:18888","5.78.81.29:18888","5.78.87.132:18888","5.78.97.204:18888","5.79.126.68:18888","5.83.147.158:18888","5.9.102.229:18888","5.9.155.18:18888","5.9.68.240:18888","50.19.59.41:18888","51.15.16.155:18888","51.161.198.11:18888","51.178.97.193:18888","51.195.199.244:18888","51.195.234.24:18888","51.195.28.36:18888","51.75.84.165:18888","51.77.42.191:18888","51.77.54.84:18888","51.79.163.205:18888","51.79.230.24:18888","51.81.154.176:18888","51.81.57.9:18888","51.89.194.158:18888","51.89.98.192:18888","51.91.215.58:18888","52.1.227.206:18888","52.1.229.6:18888","52.15.93.92:18888","52.192.129.144:18888","52.196.244.176:18888","52.202.188.14:18888","52.204.32.56:18888","52.209.244.73:18888","52.220.110.93:18888","52.39.105.180:18888","52.39.116.62:18888","52.50.194.169:18888","52.53.189.99:18888","52.54.23.1:18888","52.62.178.58:18888","52.68.214.72:18888","52.70.28.23:18888","52.71.12.95:18888","52.77.14.242:18888","52.8.41.162:18888","52.9.137.146:18888","54.149.230.253:18888","54.150.70.16:18888","54.151.226.240:18888","54.153.59.116:18888","54.153.94.160:18888","54.155.104.213:18888","54.159.118.36:18888","54.167.11.177:18888","54.177.115.127:18888","54.177.27.11:18888","54.179.207.68:18888","54.179.228.13:18888","54.180.158.255:18888","54.180.230.240:18888","54.180.236.26:18888","54.188.97.41:18888","54.190.110.184:18888","54.191.47.33:18888","54.195.7.167:18888","54.199.171.19:18888","54.214.153.252:18888","54.219.233.159:18888","54.219.96.228:18888","54.233.5.101:18888","54.242.175.34:18888","54.248.129.19:18888","54.251.170.81:18888","54.251.179.33:18888","54.252.224.209:18888","54.254.131.82:18888","54.254.230.237:18888","54.255.102.90:18888","54.255.12.167:18888","54.70.52.47:18888","54.79.19.1:18888","54.79.192.166:18888","54.82.161.39:18888","54.83.176.151:18888","54.85.224.218:18888","54.93.198.177:18888","54.94.95.78:18888","54.95.36.242:18888","57.128.187.240:18888","57.128.20.118:18888","57.129.1.83:18888","57.129.18.183:18888","57.129.39.199:18888","58.121.65.190:18888","60.244.109.20:18888","64.130.58.13:18888","64.176.197.128:18888","64.20.47.250:18888","64.226.122.57:18888","65.108.108.45:18888","65.108.109.116:18888","65.108.121.106:18888","65.108.122.240:18888","65.108.129.50:18888","65.108.131.156:18888","65.108.193.167:18888","65.108.237.46:18888","65.108.238.86:18888","65.108.47.118:18888","65.108.56.173:18888","65.108.72.109:18888","65.108.79.87:18888","65.108.8.88:18888","65.108.96.206:18888","65.109.103.189:18888","65.109.106.182:18888","65.109.115.236:18888","65.109.115.243:18888","65.109.155.171:18888","65.109.155.173:18888","65.109.20.30:18888","65.109.26.144:18888","65.109.32.171:18888","65.109.48.180:18888","65.109.50.36:18888","65.109.61.249:18888","65.109.61.43:18888","65.109.64.160:18888","65.109.76.182:18888","65.109.76.234:18888","65.109.89.115:18888","65.109.95.115:18888","65.21.125.7:18888","65.21.131.167:18888","65.21.169.113:18888","65.21.195.31:18888","65.21.209.133:18888","65.21.220.241:18888","65.21.235.95:18888","65.21.33.227:18888","65.21.58.122:18888","65.21.71.43:18888","65.21.76.58:18888","65.21.84.33:18888","66.29.129.233:18888","66.29.136.8:18888","66.29.147.102:18888","67.220.67.24:18888","67.220.95.120:18888","67.220.95.8:18888","69.57.160.174:18888","78.128.78.155:18888","78.135.66.25:18888","78.138.62.10:18888","78.140.143.130:18888","78.24.180.202:18888","78.46.102.246:18888","78.46.121.46:18888","78.46.161.91:18888","78.46.206.254:18888","78.46.48.116:18888","78.46.48.143:18888","78.46.48.154:18888","78.88.65.165:18888","8.210.166.55:18888","8.210.172.253:18888","8.210.193.209:18888","8.217.133.60:18888","8.217.215.241:18888","8.217.98.229:18888","8.219.111.54:18888","8.219.56.71:18888","80.227.241.154:18888","80.251.210.233:18888","80.64.208.110:18888","80.64.208.155:18888","80.66.87.192:18888","81.163.209.253:18888","83.142.233.222:18888","84.17.53.76:18888","84.247.181.223:18888","84.54.44.82:18888","85.10.240.39:18888","85.209.134.195:18888","87.98.128.112:18888","88.119.166.152:18888","88.198.50.92:18888","88.198.51.143:18888","88.198.52.53:18888","88.99.103.51:18888","88.99.210.215:18888","88.99.4.100:18888","89.105.216.9:18888","89.111.43.162:18888","89.111.43.174:18888","89.169.28.194:18888","89.43.196.6:18888","89.58.4.66:18888","89.58.62.167:18888","91.107.175.123:18888","91.134.31.181:18888","91.134.41.218:18888","91.134.74.90:18888","91.134.78.132:18888","91.196.0.89:18888","91.218.50.46:18888","91.228.147.6:18888","91.244.197.177:18888","92.53.84.164:18888","93.115.25.154:18888","93.115.26.120:18888","93.115.26.57:18888","94.138.149.63:18888","94.177.25.22:18888","94.177.25.23:18888","94.237.98.235:18888","95.131.148.184:18888","95.183.54.138:18888","95.211.170.39:18888","95.211.241.180:18888","95.211.3.226:18888","95.216.0.33:18888","95.216.100.42:18888","95.216.243.40:18888","95.217.119.212:18888","95.217.150.154:18888","95.217.20.251:18888","95.217.230.95:18888","95.217.62.144:18888","95.217.83.82:18888","95.217.87.61:18888","96.126.96.129:18888","96.45.189.188:18888","98.81.88.22:18888"]
}

genesis.block = {
  # Reserve balance
  assets = [
    {
      accountName = "Zion"
      accountType = "AssetIssue"
      address = "TLLM21wteSPs4hKjbxgmH1L6poyMjeTbHm"
      balance = "99000000000000000"
    },
    {
      accountName = "Sun"
      accountType = "AssetIssue"
      address = "TXmVpin5vq5gdZsciyyjdZgKRUju4st1wM"
      balance = "0"
    },
    {
      accountName = "Blackhole"
      accountType = "AssetIssue"
      address = "TLsV52sRDL79HXGGm9yzwKibb6BeruhUzy"
      balance = "-9223372036854775808"
    }
  ]

  witnesses = [
    {
      address: THKJYuUmMKKARNf7s2VT51g5uPY6KEqnat,
      url = "http://GR1.com",
      voteCount = 100000026
    },
    {
      address: TVDmPWGYxgi5DNeW8hXrzrhY8Y6zgxPNg4,
      url = "http://GR2.com",
      voteCount = 100000025
    },
    {
      address: TWKZN1JJPFydd5rMgMCV5aZTSiwmoksSZv,
      url = "http://GR3.com",
      voteCount = 100000024
    },
    {
      address: TDarXEG2rAD57oa7JTK785Yb2Et32UzY32,
      url = "http://GR4.com",
      voteCount = 100000023
    },
    {
      address: TAmFfS4Tmm8yKeoqZN8x51ASwdQBdnVizt,
      url = "http://GR5.com",
      voteCount = 100000022
    },
    {
      address: TK6V5Pw2UWQWpySnZyCDZaAvu1y48oRgXN,
      url = "http://GR6.com",
      voteCount = 100000021
    },
    {
      address: TGqFJPFiEqdZx52ZR4QcKHz4Zr3QXA24VL,
      url = "http://GR7.com",
      voteCount = 100000020
    },
    {
      address: TC1ZCj9Ne3j5v3TLx5ZCDLD55MU9g3XqQW,
      url = "http://GR8.com",
      voteCount = 100000019
    },
    {
      address: TWm3id3mrQ42guf7c4oVpYExyTYnEGy3JL,
      url = "http://GR9.com",
      voteCount = 100000018
    },
    {
      address: TCvwc3FV3ssq2rD82rMmjhT4PVXYTsFcKV,
      url = "http://GR10.com",
      voteCount = 100000017
    },
    {
      address: TFuC2Qge4GxA2U9abKxk1pw3YZvGM5XRir,
      url = "http://GR11.com",
      voteCount = 100000016
    },
    {
      address: TNGoca1VHC6Y5Jd2B1VFpFEhizVk92Rz85,
      url = "http://GR12.com",
      voteCount = 100000015
    },
    {
      address: TLCjmH6SqGK8twZ9XrBDWpBbfyvEXihhNS,
      url = "http://GR13.com",
      voteCount = 100000014
    },
    {
      address: TEEzguTtCihbRPfjf1CvW8Euxz1kKuvtR9,
      url = "http://GR14.com",
      voteCount = 100000013
    },
    {
      address: TZHvwiw9cehbMxrtTbmAexm9oPo4eFFvLS,
      url = "http://GR15.com",
      voteCount = 100000012
    },
    {
      address: TGK6iAKgBmHeQyp5hn3imB71EDnFPkXiPR,
      url = "http://GR16.com",
      voteCount = 100000011
    },
    {
      address: TLaqfGrxZ3dykAFps7M2B4gETTX1yixPgN,
      url = "http://GR17.com",
      voteCount = 100000010
    },
    {
      address: TX3ZceVew6yLC5hWTXnjrUFtiFfUDGKGty,
      url = "http://GR18.com",
      voteCount = 100000009
    },
    {
      address: TYednHaV9zXpnPchSywVpnseQxY9Pxw4do,
      url = "http://GR19.com",
      voteCount = 100000008
    },
    {
      address: TCf5cqLffPccEY7hcsabiFnMfdipfyryvr,
      url = "http://GR20.com",
      voteCount = 100000007
    },
    {
      address: TAa14iLEKPAetX49mzaxZmH6saRxcX7dT5,
      url = "http://GR21.com",
      voteCount = 100000006
    },
    {
      address: TBYsHxDmFaRmfCF3jZNmgeJE8sDnTNKHbz,
      url = "http://GR22.com",
      voteCount = 100000005
    },
    {
      address: TEVAq8dmSQyTYK7uP1ZnZpa6MBVR83GsV6,
      url = "http://GR23.com",
      voteCount = 100000004
    },
    {
      address: TRKJzrZxN34YyB8aBqqPDt7g4fv6sieemz,
      url = "http://GR24.com",
      voteCount = 100000003
    },
    {
      address: TRMP6SKeFUt5NtMLzJv8kdpYuHRnEGjGfe,
      url = "http://GR25.com",
      voteCount = 100000002
    },
    {
      address: TDbNE1VajxjpgM5p7FyGNDASt3UVoFbiD3,
      url = "http://GR26.com",
      voteCount = 100000001
    },
    {
      address: TLTDZBcPoJ8tZ6TTEeEqEvwYFk2wgotSfD,
      url = "http://GR27.com",
      voteCount = 100000000
    }
  ]

  timestamp = "0" #2017-8-26 12:00:00

  parentHash = "0xe58f33f9baf9305dc6f82b9f1934ea8f0ade2defb951258d50167028c780351f"
}

// Optional.The default is empty.
// It is used when the witness account has set the witnessPermission.
// When it is not empty, the localWitnessAccountAddress represents the address of the witness account,
// and the localwitness is configured with the private key of the witnessPermissionAddress in the witness account.
// When it is empty,the localwitness is configured with the private key of the witness account.

//localWitnessAccountAddress =

localwitness = [
]

#localwitnesskeystore = [
#  "localwitnesskeystore.json"
#]

block = {
  needSyncCheck = true
  maintenanceTimeInterval = 21600000
  proposalExpireTime = 259200000 // 3 day: 259200000(ms)
}

# Transaction reference block, default is "solid", configure to "head" may incur TaPos error
# trx.reference.block = "solid" // head;solid;

# This property sets the number of milliseconds after the creation of the transaction that is expired, default value is  60000.
# trx.expiration.timeInMilliseconds = 60000

vm = {
  supportConstant = true
  maxEnergyLimitForConstant = 100000000
  minTimeRatio = 0.0
  maxTimeRatio = {VM_MAX_TIME_RATIO_PLACEHOLDER}
  saveInternalTx = true

  # Indicates whether the node stores featured internal transactions, such as freeze, vote and so on
  saveFeaturedInternalTx = true

  # In rare cases, transactions that will be within the specified maximum execution time (default 10(ms)) are re-executed and packaged
  # longRunningTime = 10

  # Indicates whether the node support estimate energy API.
  estimateEnergy = true

  # Indicates the max retry time for executing transaction in estimating energy.
  estimateEnergyMaxRetry = 3
}

committee = {
  allowCreationOfContracts = 0  //mainnet:0 (reset by committee),test:1
  allowAdaptiveEnergy = 0  //mainnet:0 (reset by committee),test:1
}

event.subscribe = {
    native = {
      useNativeQueue = false // if true, use native message queue, else use event plugin.
      bindport = 5555 // bind port
      sendqueuelength = 1000 //max length of send queue
    }

    path = "{PLUGIN_PATH_PLACEHOLDER}" // absolute path of plugin
    server = "{KAFKA_SERVER_PLACEHOLDER}" // target server address to receive event triggers
    // dbname|username|password, if you want to create indexes for collections when the collections
    // are not exist, you can add version and set it to 2, as dbname|username|password|version
    // if you use version 2 and one collection not exists, it will create index automaticaly;
    // if you use version 2 and one collection exists, it will not create index, you must create index manually;
    dbconfig = ""
    contractParse = true
    topics = [
        {
          triggerName = "block" // block trigger, the value can't be modified
          enable = {BLOCK_TRIGGER_PLACEHOLDER}
          topic = "block" // plugin topic, the value could be modified
          solidified = false // if set true, just need solidified block, default is false
        },
        {
          triggerName = "transaction"
          enable = {TRANSACTION_TRIGGER_PLACEHOLDER}
          topic = "transaction"
          solidified = false
          ethCompatible = false // if set true, add transactionIndex, cumulativeEnergyUsed, preCumulativeLogCount, logList, energyUnitPrice, default is false
        },
        {
          triggerName = "contractevent"
          enable = {CONTRACTEVENT_TRIGGER_PLACEHOLDER}
          topic = "contractevent"
        },
        {
          triggerName = "contractlog"
          enable = {CONTRACTLOG_TRIGGER_PLACEHOLDER}
          topic = "contractlog"
          redundancy = false // if set true, contractevent will also be regarded as contractlog
        },
        {
          triggerName = "solidity" // solidity block trigger(just include solidity block number and timestamp), the value can't be modified
          enable = {SOLIDITY_BLOCK_TRIGGER_PLACEHOLDER}
          topic = "solidity"
        },
        {
          triggerName = "solidityevent"
          enable = {SOLIDITY_EVENT_TRIGGER_PLACEHOLDER}
          topic = "solidityevent"
        },
        {
          triggerName = "soliditylog"
          enable = {SOLIDITY_LOG_TRIGGER_PLACEHOLDER}
          topic = "soliditylog"
          redundancy = false // if set true, solidityevent will also be regarded as soliditylog
        }
    ]

    filter = {
       fromblock = "" // the value could be "", "earliest" or a specified block number as the beginning of the queried range
       toblock = "" // the value could be "", "latest" or a specified block number as end of the queried range
       contractAddress = [
           {CONTRACT_ADDRESS_FILTER_PLACEHOLDER}
       ]

       contractTopic = [
            {CONTRACT_TOPIC_FILTER_PLACEHOLDER}
       ]
    }
}
