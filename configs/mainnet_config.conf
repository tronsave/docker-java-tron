net {
  type = mainnet
  # type = testnet
}

storage {
  # Directory for storing persistent data
  db.version = 2,
  db.engine="LEVELDB",
  db.sync = false,
  db.directory = "database",
  index.directory = "index",
  transHistory.switch = "on",
  # You can custom these 14 databases' configs:

  # account, account-index, asset-issue, block, block-index,
  # block_KDB, peers, properties, recent-block, trans,
  # utxo, votes, witness, witness_schedule.

  # Otherwise, db configs will remain default and data will be stored in
  # the path of "output-directory" or which is set by "-d" ("--output-directory").
  # setting can impove leveldb performance .... start
  # node: if this will increase process fds,you may be check your ulimit if 'too many open files' error occurs
  # see https://github.com/tronprotocol/tips/blob/master/tip-343.md for detail
  # if you find block sync has lower performance,you can try  this  settings
  index.switch = "off"
  default = {
    maxOpenFiles = 1000
  }
  defaultM = {
    maxOpenFiles = 5000
  }
  defaultL = {
    maxOpenFiles = 50000
  }
  # setting can impove leveldb performance .... end
  # Attention: name is a required field that must be set !!!
  properties = [
    //    {
    //      name = "account",
    //      path = "storage_directory_test",
    //      createIfMissing = true,
    //      paranoidChecks = true,
    //      verifyChecksums = true,
    //      compressionType = 1,        // compressed with snappy
    //      blockSize = 4096,           // 4  KB =         4 * 1024 B
    //      writeBufferSize = 10485760, // 10 MB = 10 * 1024 * 1024 B
    //      cacheSize = 10485760,       // 10 MB = 10 * 1024 * 1024 B
    //      maxOpenFiles = 100
    //    },
    //    {
    //      name = "account-index",
    //      path = "storage_directory_test",
    //      createIfMissing = true,
    //      paranoidChecks = true,
    //      verifyChecksums = true,
    //      compressionType = 1,        // compressed with snappy
    //      blockSize = 4096,           // 4  KB =         4 * 1024 B
    //      writeBufferSize = 10485760, // 10 MB = 10 * 1024 * 1024 B
    //      cacheSize = 10485760,       // 10 MB = 10 * 1024 * 1024 B
    //      maxOpenFiles = 100
    //    },
  ]

  needToUpdateAsset = true

  //dbsettings is needed when using rocksdb as the storage implement (db.engine="ROCKSDB").
  //we'd strongly recommend that do not modify it unless you know every item's meaning clearly.
  dbSettings = {
    levelNumber = 7
    compactThreads = 8 // full when sync and cpu/2 when sync done 
    blocksize = 64  // n * KB
    maxBytesForLevelBase = 256  // n * MB
    maxBytesForLevelMultiplier = 10
    level0FileNumCompactionTrigger = 2 // 4 when sync 2 when sync done
    targetFileSizeBase = 256  // n * MB
    targetFileSizeMultiplier = 1
  }

  //backup settings when using rocks db as the storage implement (db.engine="ROCKSDB").
  //if you want to use the backup plugin, please confirm set the db.engine="ROCKSDB" above.
  backup = {
    enable = false  // indicate whether enable the backup plugin
    propPath = "prop.properties" // record which bak directory is valid
    bak1path = "bak1/database" // you must set two backup directories to prevent application halt unexpected(e.g. kill -9).
    bak2path = "bak2/database"
    frequency = 10000   // indicate backup db once every 10000 blocks processed.
  }

  balance.history.lookup = false

  checkpoint.version = 2
  checkpoint.sync = true

  # the estimated number of block transactions (default 1000, min 100, max 10000).
  # so the total number of cached transactions is 65536 * txCache.estimatedTransactions
  txCache.estimatedTransactions = 1000
  txCache.initOptimization = true

  # data root setting, for check data, currently, only reward-vi is used.

  # merkleRoot = {
  # reward-vi = 9debcb9924055500aaae98cdee10501c5c39d4daa75800a996f4bdda73dbccd8 // main-net, Sha256Hash, hexString
  # }
}

node.discovery = {
  enable = true
  persist = true
}

# custom stop condition
#node.shutdown = {
#  BlockTime  = "54 59 08 * * ?" # if block header time in persistent db matched.
#  BlockHeight = 33350800 # if block header height in persistent db matched.
#  BlockCount = 12 # block sync count after node start.
#}

node.backup {
  # udp listen port, each member should have the same configuration
  port = 10001

  # my priority, each member should use different priority
  priority = 8

  # time interval to send keepAlive message, each member should have the same configuration
  keepAliveInterval = 3000

  # peer's ip list, can't contain mine
  members = [
    # "ip",
    # "ip"
  ]
}

crypto {
  engine = "eckey"
}
# prometheus metrics start
# node.metrics = {
#  prometheus{
#    enable=true
#    port="9527"
#  }
# }

# prometheus metrics end

node {
  # trust node for solidity node
  # trustNode = "ip:port"
  trustNode = "127.0.0.1:50051"

  # expose extension api to public or not
  walletExtensionApi = true

  listen.port = 18888

  connection.timeout = 2

  fetchBlock.timeout = 200

  tcpNettyWorkThreadNum = 0

  udpNettyWorkThreadNum = 1

  # Number of validate sign thread, default availableProcessors / 2
  # validateSignThreadNum = 16

  maxConnections = 100

  minConnections = 5

  minActiveConnections = 3

  maxConnectionsWithSameIp = 5

  maxHttpConnectNumber = 50

  minParticipationRate = 15

  isOpenFullTcpDisconnect = false

  p2p {
    version = 11111 # 11111: mainnet; 20180622: testnet
    maxActiveNodes: 100
  }

  active = [
    # Active establish connection in any case
    # Sample entries:
    # "ip:port",
    # "ip:port"
  ]

  passive = [
    # Passive accept connection in any case
    # Sample entries:
    # "ip:port",
    # "ip:port"
  ]

  fastForward = [
    "100.26.245.209:18888",
    "15.188.6.125:18888"
  ]

  http {
    fullNodeEnable = true
    fullNodePort = {FULL_NODE_PORT}
    solidityEnable = false
    solidityPort = {SOLIDITY_NODE_PORT}
  }

  rpc {
    port = 50051
    #solidityPort = 50061
    # Number of gRPC thread, default availableProcessors / 2
    thread = 16

    # The maximum number of concurrent calls permitted for each incoming connection
    # maxConcurrentCallsPerConnection =

    # The HTTP/2 flow control window, default 1MB
    # flowControlWindow =

    # Connection being idle for longer than which will be gracefully terminated
    maxConnectionIdleInMillis = 60000

    # Connection lasting longer than which will be gracefully terminated
    # maxConnectionAgeInMillis =

    # The maximum message size allowed to be received on the server, default 4MB
    # maxMessageSize =

    # The maximum size of header list allowed to be received, default 8192
    # maxHeaderListSize =

    # Transactions can only be broadcast if the number of effective connections is reached.
    minEffectiveConnection = 1
   
    # The switch of the reflection service, effective for all gRPC services
    # reflectionService = true
  }

  # number of solidity thread in the FullNode.
  # If accessing solidity rpc and http interface timeout, could increase the number of threads,
  # The default value is the number of cpu cores of the machine.
  #solidity.threads = 8

  # Limits the maximum percentage (default 75%) of producing block interval
  # to provide sufficient time to perform other operations e.g. broadcast block
  # blockProducedTimeOut = 75

  # Limits the maximum number (default 700) of transaction from network layer
  # netMaxTrxPerSecond = 700

  # Whether to enable the node detection function, default false
  # nodeDetectEnable = false

  # use your ipv6 address for node discovery and tcp connection, default false
  enableIpv6 = false

  # if your node's highest block num is below than all your pees', try to acquire new connection. default false
  effectiveCheckEnable = true

  # Dynamic loading configuration function, disabled by default
  # dynamicConfig = {
    # enable = false
    # Configuration file change check interval, default is 600 seconds
    # checkInterval = 600
  # }

  dns {
    # dns urls to get nodes, url format tree://{pubkey}@{domain}, default empty
    treeUrls = [
      #"tree://AKMQMNAJJBL73LXWPXDI4I5ZWWIZ4AWO34DWQ636QOBBXNFXH3LQS@main.trondisco.net", //offical dns tree
    ]

    # enable or disable dns publish, default false
    # publish = false

    # dns domain to publish nodes, required if publish is true
    # dnsDomain = "nodes1.example.org"

    # dns private key used to publish, required if publish is true, hex string of length 64
    # dnsPrivate = "b71c71a67e1177ad4e901695e1b4b9ee17ae16c6668d313eac2f96dbcda3f291"

    # known dns urls to publish if publish is true, url format tree://{pubkey}@{domain}, default empty
    # knownUrls = [
    #"tree://APFGGTFOBVE2ZNAB3CSMNNX6RRK3ODIRLP2AA5U4YFAA6MSYZUYTQ@nodes2.example.org",
    # ]

    # staticNodes = [
    # static nodes to published on dns
    # Sample entries:
    # "ip:port",
    # "ip:port"
    # ]

    # merge several nodes into a leaf of tree, should be 1~5
    # maxMergeSize = 5

    # only nodes change percent is bigger then the threshold, we update data on dns
    # changeThreshold = 0.1

    # dns server to publish, required if publish is true, only aws or aliyun is support
    # serverType = "aws"

    # access key id of aws or aliyun api, required if publish is true, string
    # accessKeyId = "your-key-id"

    # access key secret of aws or aliyun api, required if publish is true, string
    # accessKeySecret = "your-key-secret"

    # if publish is true and serverType is aliyun, it's endpoint of aws dns server, string
    # aliyunDnsEndpoint = "alidns.aliyuncs.com"

    # if publish is true and serverType is aws, it's region of aws api, such as "eu-south-1", string
    # awsRegion = "us-east-1"

    # if publish is true and server-type is aws, it's host zone id of aws's domain, string
    # awsHostZoneId = "your-host-zone-id"
  }

  # open the history query APIs(http&GRPC) when node is a lite fullNode,
  # like {getBlockByNum, getBlockByID, getTransactionByID...}.
  # default: false.
  # note: above APIs may return null even if blocks and transactions actually are on the blockchain
  # when opening on a lite fullnode. only open it if the consequences being clearly known
  # openHistoryQueryWhenLiteFN = false

  jsonrpc {
    # Note: If you turn on jsonrpc and run it for a while and then turn it off, you will not
    # be able to get the data from eth_getLogs for that period of time.

    httpFullNodeEnable = true
    httpFullNodePort = {RPC_FULL_NODE}
    httpSolidityEnable = false
    httpSolidityPort = {RPC_SOLIDITY_NODE}
    httpPBFTEnable = true
    httpPBFTPort = 8565
  }

  # Disabled api list, it will work for http, rpc and pbft, both fullnode and soliditynode,
  # but not jsonrpc.
  # Sample: The setting is case insensitive, GetNowBlock2 is equal to getnowblock2
  #
  # disabledApi = [
  #   "getaccount",
  #   "getnowblock2"
  # ]
}

## rate limiter config
rate.limiter = {
  # Every api could be set a specific rate limit strategy. Three strategy are supported:GlobalPreemptibleAdapter、IPQPSRateLimiterAdapte、QpsRateLimiterAdapter
  # GlobalPreemptibleAdapter: permit is the number of preemptible resource, every client must apply one resourse
  #       before do the request and release the resource after got the reponse automaticlly. permit should be a Integer.
  # QpsRateLimiterAdapter: qps is the average request count in one second supported by the server, it could be a Double or a Integer.
  # IPQPSRateLimiterAdapter: similar to the QpsRateLimiterAdapter, qps could be a Double or a Integer.
  # If do not set, the "default strategy" is set.The "default startegy" is based on QpsRateLimiterAdapter, the qps is set as 10000.
  #
  # Sample entries:
  #
  http = [
    #  {
    #    component = "GetNowBlockServlet",
    #    strategy = "GlobalPreemptibleAdapter",
    #    paramString = "permit=1"
    #  },

    #  {
    #    component = "GetAccountServlet",
    #    strategy = "IPQPSRateLimiterAdapter",
    #    paramString = "qps=1"
    #  },

    #  {
    #    component = "ListWitnessesServlet",
    #    strategy = "QpsRateLimiterAdapter",
    #    paramString = "qps=1"
    #  }
  ],

  rpc = [
    #  {
    #    component = "protocol.Wallet/GetBlockByLatestNum2",
    #    strategy = "GlobalPreemptibleAdapter",
    #    paramString = "permit=1"
    #  },

    #  {
    #    component = "protocol.Wallet/GetAccount",
    #    strategy = "IPQPSRateLimiterAdapter",
    #    paramString = "qps=1"
    #  },

    #  {
    #    component = "protocol.Wallet/ListWitnesses",
    #    strategy = "QpsRateLimiterAdapter",
    #    paramString = "qps=1"
    #  },
  ]

  # global qps, default 50000
  # global.qps = 50000
  # IP-based global qps, default 10000
  # global.ip.qps = 10000
}



seed.node = {
  # List of the seed nodes
  # Seed nodes are stable full nodes
  # example:
  # ip.list = [
  #   "ip:port",
  #   "ip:port"
  # ]
  ip.list = [
    "13.214.29.247:18888",
    "13.212.29.112:18888",
    "15.235.181.91:18888",
    "15.235.160.230:18888",
    "51.79.163.205:18888",
    "125.253.92.1:18888",
    "43.156.107.95:18888",
    "108.137.5.152:18888",
    "34.92.213.207:18888",
    "13.231.172.210:18888",
    "212.71.238.178:18888",
    "18.175.233.5:18888",
    "23.92.25.214:18888",
    "23.239.119.82:18888",
    "94.103.11.116:18888",
    "38.130.75.35:18888",
    "13.60.166.182:18888",
    "98.81.88.22:18888",
    "195.201.98.3:18888",
    "143.92.61.30:18888",
    "188.245.233.168:18888",
    "65.21.71.43:18888",
    "135.181.169.166:18888",
    "5.104.82.203:18888",
    "34.151.237.76:18888",
    "178.156.153.52:18888",
    "138.201.152.19:18888",
    "3.67.193.88:18888",
    "37.27.206.170:18888",
    "15.236.23.159:18888",
    "13.229.127.179:18888",
    "149.28.149.236:18888",
    "101.44.175.172:18888",
    "34.92.95.193:18888",
    "34.96.178.224:18888",
    "34.81.117.143:18888",
    "35.234.24.158:18888",
    "13.200.214.226:18888",
    "35.220.245.63:18888",
    "45.32.11.124:18888",
    "5.78.87.132:18888",
    "37.27.25.172:18888",
    "104.237.138.193:18888",
    "34.31.229.254:18888",
    "3.92.88.196:18888",
    "5.78.129.89:18888",
    "194.58.33.49:18888",
    "51.91.215.58:18888",
    "3.145.75.56:18888",
    "92.53.64.236:18888",
    "13.245.160.41:18888",
    "35.198.43.135:18888",
    "35.247.194.189:18888",
    "80.251.210.233:18888",
    "54.85.224.218:18888",
    "18.143.178.96:18888",
    "18.162.123.122:18888",
    "13.112.17.17:18888",
    "47.245.53.168:18888",
    "47.91.106.48:18888",
    "3.25.210.242:18888",
    "63.176.144.41:18888",
    "34.116.212.217:18888",
    "54.155.93.252:18888",
    "13.53.129.34:18888",
    "104.238.222.164:18888",
    "5.78.97.204:18888",
    "34.118.97.84:18888",
    "18.135.9.36:18888",
    "185.8.107.40:18888",
    "34.118.95.84:18888",
    "44.208.138.167:18888",
    "46.4.5.173:18888",
    "34.151.99.120:18888",
    "34.172.230.64:18888",
    "159.138.120.21:18888",
    "5.223.45.41:18888",
    "15.235.204.131:18888",
    "35.229.169.175:18888",
    "35.75.18.26:18888",
    "94.202.30.184:18888",
    "27.154.106.218:18888",
    "120.53.250.130:18888",
    "44.228.141.75:18888",
    "34.116.233.12:18888",
    "34.116.143.219:18888",
    "221.152.150.74:18888",
    "35.182.38.195:18888",
    "34.30.250.219:18888",
    "65.109.98.58:18888",
    "188.245.232.121:18888",
    "47.128.13.79:18888",
    "18.136.46.182:18888",
    "103.214.147.35:18888",
    "34.150.116.166:18888",
    "183.178.37.161:18888",
    "16.63.165.27:18888",
    "34.221.52.114:18888",
    "18.225.57.191:18888",
    "34.118.6.126:18888",
    "18.142.140.186:18888",
    "18.136.147.186:18888",
    "35.240.149.114:18888",
    "34.96.185.211:18888",
    "3.29.15.21:18888",
    "94.205.37.147:18888",
    "35.197.160.36:18888",
    "3.68.115.21:18888",
    "57.128.20.118:18888",
    "34.116.155.63:18888",
    "104.199.135.51:18888",
    "51.17.170.124:18888",
    "3.131.225.213:18888",
    "3.99.215.64:18888",
    "116.202.171.24:18888",
    "188.245.243.179:18888",
    "5.161.112.50:18888",
    "65.109.76.182:18888",
    "54.233.40.35:18888",
    "162.19.112.217:18888",
    "35.77.7.146:18888",
    "54.151.37.2:18888",
    "34.133.8.8:18888",
    "104.199.152.253:18888",
    "34.132.134.239:18888",
    "3.135.186.56:18888",
    "95.165.104.95:18888",
    "35.247.249.250:18888",
    "46.250.163.42:18888",
    "54.94.95.78:18888",
    "35.189.34.19:18888",
    "5.223.51.241:18888",
    "34.92.45.131:18888",
    "34.92.234.78:18888",
    "23.81.42.208:18888",
    "35.197.171.161:18888",
    "54.153.104.109:18888",
    "35.194.189.22:18888",
    "3.120.33.204:18888",
    "13.38.11.10:18888",
    "34.44.57.208:18888",
    "74.50.90.74:18888",
    "5.161.199.143:18888",
    "91.134.56.151:18888",
    "37.27.51.13:18888",
    "67.220.95.120:18888",
    "172.234.17.99:18888",
    "67.202.61.161:18888",
    "13.212.110.193:18888",
    "65.1.128.95:18888",
    "5.78.131.188:18888",
    "45.139.226.52:18888",
    "13.212.249.51:18888",
    "18.142.131.98:18888",
    "168.119.142.105:18888",
    "45.91.94.167:18888",
    "5.9.102.229:18888",
    "188.40.83.153:18888",
    "52.54.23.1:18888",
    "47.237.87.12:18888",
    "51.161.174.112:18888",
    "185.44.206.9:18888",
    "34.45.180.247:18888",
    "109.123.230.113:18888",
    "13.211.43.189:18888",
    "88.99.4.100:18888",
    "172.234.23.14:18888",
    "34.121.104.155:18888",
    "35.182.135.33:18888",
    "18.231.55.136:18888",
    "89.169.28.194:18888",
    "27.115.124.2:18888",
    "18.116.63.26:18888",
    "195.201.129.123:18888",
    "108.129.194.204:18888",
    "65.109.34.156:18888",
    "13.228.252.62:18888",
    "36.112.103.30:18888",
    "3.25.88.242:18888",
    "16.50.246.11:18888",
    "172.232.21.80:18888",
    "3.124.160.128:18888",
    "157.180.23.12:18888",
    "5.45.72.79:18888",
    "183.239.127.218:18888",
    "101.44.25.152:18888",
    "34.30.200.234:18888",
    "34.151.92.106:18888",
    "222.247.19.179:18888",
    "20.86.101.45:18888",
    "43.199.1.186:18888",
    "3.8.20.20:18888",
    "172.233.198.15:18888",
    "18.221.129.64:18888",
    "35.77.7.53:18888",
    "23.227.221.94:18888",
    "13.61.8.74:18888",
    "159.138.92.82:18888",
    "203.149.234.126:18888",
    "35.220.173.108:18888",
    "211.72.236.2:18888",
    "13.231.22.184:18888",
    "52.30.132.101:18888",
    "54.216.118.239:18888",
    "104.198.218.149:18888",
    "65.109.20.30:18888",
    "167.235.244.45:18888",
    "51.44.169.25:18888",
    "185.228.49.198:18888",
    "91.107.175.123:18888",
    "5.161.252.179:18888",
    "216.245.183.254:18888",
    "40.176.52.3:18888",
    "51.195.28.36:18888",
    "95.217.60.189:18888",
    "16.163.242.95:18888",
    "35.229.199.112:18888",
    "94.254.2.155:18888",
    "45.93.203.58:18888",
    "178.156.143.158:18888",
    "210.5.172.185:18888",
    "210.5.172.188:18888",
    "101.69.226.138:18888",
    "3.253.23.85:18888",
    "217.28.62.27:18888",
    "15.228.40.26:18888",
    "35.95.107.38:18888",
    "194.233.82.118:18888",
    "114.212.161.121:18888",
    "3.250.77.89:18888",
    "13.230.31.6:18888",
    "51.94.57.178:18888",
    "51.75.84.165:18888",
    "35.247.128.170:18888",
    "15.161.189.204:18888",
    "13.38.76.139:18888",
    "13.40.135.59:18888",
    "3.109.0.141:18888",
    "13.48.136.254:18888",
    "65.109.100.205:18888",
    "138.201.142.112:18888",
    "158.220.101.131:18888",
    "45.32.234.118:18888",
    "5.78.118.196:18888",
    "207.154.205.75:18888",
    "141.94.3.208:18888",
    "172.234.37.73:18888",
    "81.4.110.168:18888",
    "35.74.7.196:18888",
    "54.252.34.39:18888",
    "34.87.254.27:18888",
    "80.85.141.56:18888",
    "118.143.228.187:18888",
    "65.19.151.35:18888",
    "54.151.62.106:18888",
    "123.127.202.129:18888",
    "188.34.182.6:18888",
    "42.48.133.4:18888",
    "194.195.241.130:18888",
    "65.109.26.144:18888",
    "61.191.104.45:18888",
    "194.195.117.136:18888",
    "35.244.93.200:18888",
    "172.233.82.92:18888",
    "37.27.91.224:18888",
    "220.250.40.47:18888",
    "18.60.227.20:18888",
    "3.64.251.241:18888",
    "198.244.177.175:18888",
    "15.235.215.3:18888",
    "172.105.217.242:18888",
    "89.250.150.20:18888",
    "172.236.140.6:18888",
    "169.150.243.48:18888",
    "222.129.35.225:18888",
    "111.9.18.115:18888",
    "34.150.54.145:18888",
    "5.223.47.175:18888",
    "124.79.115.58:18888",
    "43.216.75.127:18888",
    "35.220.250.65:18888",
    "165.227.144.70:18888",
    "5.78.130.57:18888",
    "44.226.207.53:18888",
    "116.202.9.192:18888",
    "111.92.31.104:18888",
    "66.29.136.8:18888",
    "120.36.255.231:18888",
    "81.163.21.161:18888",
    "31.214.144.110:18888",
    "172.234.151.28:18888",
    "54.253.216.6:18888",
    "5.78.126.130:18888",
    "5.223.53.129:18888",
    "47.129.178.27:18888",
    "153.205.168.109:18888",
    "92.98.31.167:18888",
    "8.217.33.31:18888",
    "122.239.122.196:18888",
    "58.177.240.82:18888",
    "159.69.64.156:18888",
    "91.244.197.177:18888",
    "159.138.120.77:18888",
    "111.249.140.86:18888",
    "35.194.176.34:18888",
    "111.221.44.70:18888",
    "5.161.192.11:18888",
    "49.216.97.179:18888",
    "34.95.175.181:18888",
    "138.199.192.102:18888",
    "222.76.240.210:18888",
    "3.10.207.150:18888",
    "210.123.127.10:18888",
    "100.24.129.230:18888",
    "47.76.250.161:18888",
    "185.16.43.67:18888",
    "18.139.226.20:18888",
    "18.143.54.241:18888",
    "37.27.100.17:18888",
    "35.199.81.85:18888",
    "3.22.151.158:18888",
    "94.237.98.235:18888",
    "15.222.19.181:18888",
    "125.227.109.240:18888",
    "15.235.53.30:18888",
    "112.29.77.105:18888",
    "35.227.149.90:18888",
    "13.124.95.139:18888",
    "18.136.75.69:18888",
    "8.210.121.124:18888",
    "148.253.86.196:18888",
    "123.127.230.206:18888",
    "118.67.204.155:18888",
    "168.119.73.82:18888",
    "35.199.73.83:18888",
    "172.234.37.114:18888",
    "36.110.222.106:18888",
    "34.217.87.157:18888",
    "13.229.98.248:18888",
    "18.159.124.150:18888",
    "103.214.23.46:18888",
    "66.70.242.164:18888",
    "43.204.176.77:18888",
    "193.106.99.134:18888",
    "13.124.62.58:18888",
    "96.126.96.129:18888",
    "139.177.201.88:18888",
    "34.159.215.240:18888",
    "16.163.22.172:18888",
    "27.115.124.69:18888",
    "95.217.150.154:18888",
    "103.214.146.27:18888",
    "159.223.26.93:18888",
    "218.94.23.150:18888",
    "117.89.211.157:18888",
    "124.243.152.82:18888",
    "8.212.101.240:18888",
    "144.76.26.48:18888",
    "3.0.214.7:18888",
    "84.247.181.223:18888",
    "129.150.58.232:18888",
    "43.154.120.209:18888",
    "34.252.14.144:18888",
    "185.150.190.12:18888",
    "222.65.119.51:18888",
    "13.209.60.161:18888",
    "168.119.194.87:18888",
    "221.12.22.154:18888",
    "18.143.91.167:18888",
    "142.132.251.233:18888",
    "61.164.127.132:18888",
    "52.193.55.78:18888",
    "120.133.26.20:18888",
    "65.108.193.167:18888",
    "207.244.124.241:18888",
    "212.192.49.57:18888",
    "184.189.19.116:18888",
    "43.198.117.128:18888",
    "162.19.112.144:18888",
    "27.115.124.48:18888",
    "185.236.232.18:18888",
    "129.226.151.107:18888",
    "35.201.222.116:18888",
    "13.40.148.7:18888",
    "94.130.143.19:18888",
    "183.178.37.164:18888",
    "13.214.179.230:18888",
    "54.199.171.19:18888",
    "8.214.41.147:18888",
    "141.255.167.58:18888",
    "61.48.133.182:18888",
    "41.210.155.238:18888",
    "221.231.109.99:18888",
    "113.248.96.11:18888",
    "95.216.10.61:18888",
    "94.201.121.146:18888",
    "52.194.107.16:18888",
    "13.228.119.63:18888",
    "162.55.230.100:18888",
    "45.137.213.115:18888",
    "88.198.46.91:18888",
    "44.225.65.20:18888",
    "95.217.44.33:18888",
    "18.166.159.108:18888",
    "107.23.68.112:18888",
    "65.108.72.109:18888",
    "93.179.90.241:18888",
    "163.172.33.173:18888",
    "54.169.63.137:18888",
    "111.193.233.252:18888",
    "104.28.239.218:18888",
    "120.41.115.239:18888",
    "60.244.109.20:18888",
    "139.162.168.53:18888",
    "18.117.218.178:18888",
    "38.55.19.224:18888",
    "185.137.215.162:18888",
    "213.239.196.222:18888",
    "218.88.20.174:18888",
    "34.124.169.15:18888",
    "52.221.13.9:18888",
    "172.104.117.87:18888",
    "27.115.124.67:18888",
    "202.116.81.168:18888",
    "15.165.142.140:18888",
    "59.126.75.154:18888",
    "142.132.135.170:18888",
    "211.115.107.231:18888",
    "125.78.1.34:18888",
    "77.93.42.130:18888",
    "159.138.131.201:18888",
    "222.93.194.105:18888",
    "52.4.121.111:18888",
    "211.47.48.42:18888",
    "111.249.181.1:18888",
    "182.140.240.50:18888",
    "35.178.11.0:18888",
    "27.115.124.96:18888",
    "168.119.5.80:18888",
    "110.238.111.53:18888",
    "103.233.83.4:18888",
    "148.251.178.251:18888",
    "66.29.147.102:18888"
]
}

genesis.block = {
  # Reserve balance
  assets = [
    {
      accountName = "Zion"
      accountType = "AssetIssue"
      address = "TLLM21wteSPs4hKjbxgmH1L6poyMjeTbHm"
      balance = "99000000000000000"
    },
    {
      accountName = "Sun"
      accountType = "AssetIssue"
      address = "TXmVpin5vq5gdZsciyyjdZgKRUju4st1wM"
      balance = "0"
    },
    {
      accountName = "Blackhole"
      accountType = "AssetIssue"
      address = "TLsV52sRDL79HXGGm9yzwKibb6BeruhUzy"
      balance = "-9223372036854775808"
    }
  ]

  witnesses = [
    {
      address: THKJYuUmMKKARNf7s2VT51g5uPY6KEqnat,
      url = "http://GR1.com",
      voteCount = 100000026
    },
    {
      address: TVDmPWGYxgi5DNeW8hXrzrhY8Y6zgxPNg4,
      url = "http://GR2.com",
      voteCount = 100000025
    },
    {
      address: TWKZN1JJPFydd5rMgMCV5aZTSiwmoksSZv,
      url = "http://GR3.com",
      voteCount = 100000024
    },
    {
      address: TDarXEG2rAD57oa7JTK785Yb2Et32UzY32,
      url = "http://GR4.com",
      voteCount = 100000023
    },
    {
      address: TAmFfS4Tmm8yKeoqZN8x51ASwdQBdnVizt,
      url = "http://GR5.com",
      voteCount = 100000022
    },
    {
      address: TK6V5Pw2UWQWpySnZyCDZaAvu1y48oRgXN,
      url = "http://GR6.com",
      voteCount = 100000021
    },
    {
      address: TGqFJPFiEqdZx52ZR4QcKHz4Zr3QXA24VL,
      url = "http://GR7.com",
      voteCount = 100000020
    },
    {
      address: TC1ZCj9Ne3j5v3TLx5ZCDLD55MU9g3XqQW,
      url = "http://GR8.com",
      voteCount = 100000019
    },
    {
      address: TWm3id3mrQ42guf7c4oVpYExyTYnEGy3JL,
      url = "http://GR9.com",
      voteCount = 100000018
    },
    {
      address: TCvwc3FV3ssq2rD82rMmjhT4PVXYTsFcKV,
      url = "http://GR10.com",
      voteCount = 100000017
    },
    {
      address: TFuC2Qge4GxA2U9abKxk1pw3YZvGM5XRir,
      url = "http://GR11.com",
      voteCount = 100000016
    },
    {
      address: TNGoca1VHC6Y5Jd2B1VFpFEhizVk92Rz85,
      url = "http://GR12.com",
      voteCount = 100000015
    },
    {
      address: TLCjmH6SqGK8twZ9XrBDWpBbfyvEXihhNS,
      url = "http://GR13.com",
      voteCount = 100000014
    },
    {
      address: TEEzguTtCihbRPfjf1CvW8Euxz1kKuvtR9,
      url = "http://GR14.com",
      voteCount = 100000013
    },
    {
      address: TZHvwiw9cehbMxrtTbmAexm9oPo4eFFvLS,
      url = "http://GR15.com",
      voteCount = 100000012
    },
    {
      address: TGK6iAKgBmHeQyp5hn3imB71EDnFPkXiPR,
      url = "http://GR16.com",
      voteCount = 100000011
    },
    {
      address: TLaqfGrxZ3dykAFps7M2B4gETTX1yixPgN,
      url = "http://GR17.com",
      voteCount = 100000010
    },
    {
      address: TX3ZceVew6yLC5hWTXnjrUFtiFfUDGKGty,
      url = "http://GR18.com",
      voteCount = 100000009
    },
    {
      address: TYednHaV9zXpnPchSywVpnseQxY9Pxw4do,
      url = "http://GR19.com",
      voteCount = 100000008
    },
    {
      address: TCf5cqLffPccEY7hcsabiFnMfdipfyryvr,
      url = "http://GR20.com",
      voteCount = 100000007
    },
    {
      address: TAa14iLEKPAetX49mzaxZmH6saRxcX7dT5,
      url = "http://GR21.com",
      voteCount = 100000006
    },
    {
      address: TBYsHxDmFaRmfCF3jZNmgeJE8sDnTNKHbz,
      url = "http://GR22.com",
      voteCount = 100000005
    },
    {
      address: TEVAq8dmSQyTYK7uP1ZnZpa6MBVR83GsV6,
      url = "http://GR23.com",
      voteCount = 100000004
    },
    {
      address: TRKJzrZxN34YyB8aBqqPDt7g4fv6sieemz,
      url = "http://GR24.com",
      voteCount = 100000003
    },
    {
      address: TRMP6SKeFUt5NtMLzJv8kdpYuHRnEGjGfe,
      url = "http://GR25.com",
      voteCount = 100000002
    },
    {
      address: TDbNE1VajxjpgM5p7FyGNDASt3UVoFbiD3,
      url = "http://GR26.com",
      voteCount = 100000001
    },
    {
      address: TLTDZBcPoJ8tZ6TTEeEqEvwYFk2wgotSfD,
      url = "http://GR27.com",
      voteCount = 100000000
    }
  ]

  timestamp = "0" #2017-8-26 12:00:00

  parentHash = "0xe58f33f9baf9305dc6f82b9f1934ea8f0ade2defb951258d50167028c780351f"
}

// Optional.The default is empty.
// It is used when the witness account has set the witnessPermission.
// When it is not empty, the localWitnessAccountAddress represents the address of the witness account,
// and the localwitness is configured with the private key of the witnessPermissionAddress in the witness account.
// When it is empty,the localwitness is configured with the private key of the witness account.

//localWitnessAccountAddress =

localwitness = [
]

#localwitnesskeystore = [
#  "localwitnesskeystore.json"
#]

block = {
  needSyncCheck = true
  maintenanceTimeInterval = 21600000
  proposalExpireTime = 259200000 // 3 day: 259200000(ms)
}

# Transaction reference block, default is "solid", configure to "head" may incur TaPos error
# trx.reference.block = "solid" // head;solid;

# This property sets the number of milliseconds after the creation of the transaction that is expired, default value is  60000.
# trx.expiration.timeInMilliseconds = 60000

vm = {
  supportConstant = true
  maxEnergyLimitForConstant = 100000000
  minTimeRatio = 0.0
  maxTimeRatio = {VM_MAX_TIME_RATIO_PLACEHOLDER}
  saveInternalTx = true

  # Indicates whether the node stores featured internal transactions, such as freeze, vote and so on
  saveFeaturedInternalTx = true

  # In rare cases, transactions that will be within the specified maximum execution time (default 10(ms)) are re-executed and packaged
  # longRunningTime = 10

  # Indicates whether the node support estimate energy API.
  estimateEnergy = true

  # Indicates the max retry time for executing transaction in estimating energy.
  estimateEnergyMaxRetry = 3
}

committee = {
  allowCreationOfContracts = 0  //mainnet:0 (reset by committee),test:1
  allowAdaptiveEnergy = 0  //mainnet:0 (reset by committee),test:1
}

event.subscribe = {
    native = {
      useNativeQueue = false // if true, use native message queue, else use event plugin.
      bindport = 5555 // bind port
      sendqueuelength = 1000 //max length of send queue
    }

    path = "{PLUGIN_PATH_PLACEHOLDER}" // absolute path of plugin
    server = "{KAFKA_SERVER_PLACEHOLDER}" // target server address to receive event triggers
    // dbname|username|password, if you want to create indexes for collections when the collections
    // are not exist, you can add version and set it to 2, as dbname|username|password|version
    // if you use version 2 and one collection not exists, it will create index automaticaly;
    // if you use version 2 and one collection exists, it will not create index, you must create index manually;
    dbconfig = ""
    contractParse = true
    topics = [
        {
          triggerName = "block" // block trigger, the value can't be modified
          enable = {BLOCK_TRIGGER_PLACEHOLDER}
          topic = "block" // plugin topic, the value could be modified
          solidified = false // if set true, just need solidified block, default is false
        },
        {
          triggerName = "transaction"
          enable = {TRANSACTION_TRIGGER_PLACEHOLDER}
          topic = "transaction"
          solidified = false
          ethCompatible = false // if set true, add transactionIndex, cumulativeEnergyUsed, preCumulativeLogCount, logList, energyUnitPrice, default is false
        },
        {
          triggerName = "contractevent"
          enable = {CONTRACTEVENT_TRIGGER_PLACEHOLDER}
          topic = "contractevent"
        },
        {
          triggerName = "contractlog"
          enable = {CONTRACTLOG_TRIGGER_PLACEHOLDER}
          topic = "contractlog"
          redundancy = false // if set true, contractevent will also be regarded as contractlog
        },
        {
          triggerName = "solidity" // solidity block trigger(just include solidity block number and timestamp), the value can't be modified
          enable = {SOLIDITY_BLOCK_TRIGGER_PLACEHOLDER}
          topic = "solidity"
        },
        {
          triggerName = "solidityevent"
          enable = {SOLIDITY_EVENT_TRIGGER_PLACEHOLDER}
          topic = "solidityevent"
        },
        {
          triggerName = "soliditylog"
          enable = {SOLIDITY_LOG_TRIGGER_PLACEHOLDER}
          topic = "soliditylog"
          redundancy = false // if set true, solidityevent will also be regarded as soliditylog
        }
    ]

    filter = {
       fromblock = "" // the value could be "", "earliest" or a specified block number as the beginning of the queried range
       toblock = "" // the value could be "", "latest" or a specified block number as end of the queried range
       contractAddress = [
           {CONTRACT_ADDRESS_FILTER_PLACEHOLDER}
       ]

       contractTopic = [
            {CONTRACT_TOPIC_FILTER_PLACEHOLDER}
       ]
    }
}
